diff --git a/modules/usrloc/dlist.c b/modules/usrloc/dlist.c
index 2f14f16..e4cc08e 100644
--- a/modules/usrloc/dlist.c
+++ b/modules/usrloc/dlist.c
@@ -629,6 +629,7 @@ int register_udomain(const char* _n, udomain_t** _d)
 	/* Test tables from database if we are gonna
 	 * to use database
 	 */
+#if 0
 	if (db_mode != NO_DB) {
 		con = ul_dbf.init(&db_url);
 		if (!con) {
@@ -648,7 +649,7 @@ int register_udomain(const char* _n, udomain_t** _d)
 
 		ul_dbf.close(con);
 	}
-
+#endif
 	d->next = root;
 	root = d;
 	
diff --git a/modules/usrloc/ul_mod.c b/modules/usrloc/ul_mod.c
index 08126fd..87fa8b8 100644
--- a/modules/usrloc/ul_mod.c
+++ b/modules/usrloc/ul_mod.c
@@ -420,8 +420,11 @@ static int child_init(int _rank)
 		case DB_ONLY:
 		case WRITE_THROUGH:
 			/* connect to db only from SIP workers, TIMER and MAIN processes */
-			if (_rank<=0 && _rank!=PROC_TIMER && _rank!=PROC_MAIN)
+			//if (_rank<=0 && _rank!=PROC_TIMER && _rank!=PROC_MAIN)
+			if (_rank<=0 && _rank!=PROC_TIMER) {
+				LM_DBG("Proc main existed without database connection initialized\n");
 				return 0;
+			}
 			break;
 		case WRITE_BACK:
 			/* connect to db only from TIMER (for flush), from MAIN (for
@@ -442,6 +445,7 @@ static int child_init(int _rank)
 		return -1;
 	}
 	/* _rank==PROC_SIPINIT is used even when fork is disabled */
+#if 0
 	if (_rank==PROC_SIPINIT && db_mode!=DB_ONLY) {
 		/* if cache is used, populate domains from DB */
 		for( ptr=root ; ptr ; ptr=ptr->next) {
@@ -453,6 +457,7 @@ static int child_init(int _rank)
 			uldb_preload_attrs(ptr->d);
 		}
 	}
+#endif
 
 	return 0;
 }
